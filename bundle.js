!function(t){var o={};function e(n){if(o[n])return o[n].exports;var i=o[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=o,e.d=function(t,o,n){e.o(t,o)||Object.defineProperty(t,o,{enumerable:!0,get:n})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,o){if(1&o&&(t=e(t)),8&o)return t;if(4&o&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&o&&"string"!=typeof t)for(var i in t)e.d(n,i,function(o){return t[o]}.bind(null,i));return n},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,"a",o),o},e.o=function(t,o){return Object.prototype.hasOwnProperty.call(t,o)},e.p="",e(e.s=4)}([function(t,o,e){e(1);function n({pos:t,vel:o,radius:e,color:n}){this.pos=t,this.vel=o,this.radius=e,this.color=n}n.prototype.draw=function(t){const[o,e]=this.pos;t.fillStyle=this.color,t.beginPath(),t.arc(o,e,this.radius,0,2*Math.PI),t.fill()},n.prototype.move=function(t){const[o,e]=this.pos,[n,i]=this.vel;this.pos=t([o+n,e+i])},n.prototype.isWrappable=!0,t.exports=n},function(t,o,e){const n=e(6),i=e(7),s=(e(0),e(3)),r=function(){this.movingObjects=new Set;for(let t=0;t<r.NUM_ASTEROIDS;t++){const t=this.randomPostion(),o=new n({pos:t});this.add(o)}const t=this.randomPostion();this.ship=new i({pos:t},this),this.bullets=new Set};r.prototype.add=function(t){t instanceof n?this.movingObjects.add(t):t instanceof s&&this.bullets.add(t)},r.prototype.remove=function(t){t instanceof n?this.movingObjects.delete(t):t instanceof s&&this.bullets.delete(t)},r.prototype.randomPostion=function(){return[Math.random()*r.DIM_X,Math.random()*r.DIM_Y]},r.prototype.draw=function(t){t.clearRect(0,0,r.DIM_X,r.DIM_Y),this.allObjects().forEach(o=>o.draw(t))},r.prototype.moveObjects=function(){this.allObjects().forEach(t=>{t.isWrappable?t.move(this.wrap):t.move(o=>(this.isOutOfBounds(o)&&this.remove(t),o))})},r.prototype.wrap=function([t,o]){return[(t+r.DIM_X)%r.DIM_X,(o+r.DIM_Y)%r.DIM_Y]},r.prototype.checkCollisions=function(){this.movingObjects.forEach(t=>{this.ship.isCollidedWith(t)&&(this.relocate(this.ship),this.ship.reset())}),this.bullets.forEach(t=>{this.movingObjects.forEach(o=>{t.isCollidedWith(o)&&(this.remove(o),this.remove(t))})})},r.prototype.step=function(){this.moveObjects(),this.checkCollisions()},r.prototype.relocate=function(t){t.pos=this.randomPostion()},r.prototype.allObjects=function(){return[...this.movingObjects,this.ship,...this.bullets]},r.prototype.isOutOfBounds=function(t){const[o,e]=t;return o>r.DIM_X||o<0||e>r.DIM_Y||e<0},r.DIM_X=768,r.DIM_Y=512,r.NUM_ASTEROIDS=10,t.exports=r},function(t,o){const e={inherits(t,o){const e=function(){};e.prototype=o.prototype,t.prototype=new e,t.prototype.constructor=t},randomVec(t){const o=2*Math.PI*Math.random();return e.scale([Math.sin(o),Math.cos(o)],t)},scale:(t,o)=>[t[0]*o,t[1]*o]};t.exports=e},function(t,o,e){const n=e(0),i=e(2),s=function({pos:t,vel:o}){n.call(this,{pos:t,vel:o,radius:s.RADIUS,color:s.COLOR}),this.isWrappable=!1};s.RADIUS=2,s.COLOR="white",i.inherits(s,n),s.prototype.isCollidedWith=function(t){const[o,e]=this.pos,[n,i]=t.pos;return Math.sqrt((o-n)**2+(e-i)**2)<this.radius+t.radius},t.exports=s},function(t,o,e){"use strict";e.r(o);e(8);const n=e(5);document.addEventListener("DOMContentLoaded",(function(){(new n).start()}))},function(t,o,e){const n=e(1),i=function(){const t=document.getElementById("app-container");this.game=new n;const o=document.createElement("canvas"),e=o.getContext("2d");this.dimension={width:n.DIM_X,height:n.DIM_Y};const i=window.devicePixelRatio;o.width=n.DIM_X*i,o.height=n.DIM_Y*i,o.id="main-canvas",e.scale(i,i),o.tabIndex=1,o.autofocus=!0,t.appendChild(o),this.context=e,this.canvas=o};i.prototype.start=function(){this.bindKeyHandlers(),setInterval(()=>{this.game.step(),this.game.draw(this.context)},20)},i.prototype.bindKeyHandlers=function(){key("W",()=>{this.game.ship.power([0,-1])}),key("S",()=>{this.game.ship.power([0,1])}),key("A",()=>{this.game.ship.power([-1,0])}),key("D",()=>{this.game.ship.power([1,0])}),key("space",()=>{this.game.ship.fireBullet()})},t.exports=i},function(t,o,e){const n=e(2),i=e(0),s=function({pos:t}){i.call(this,{pos:t,vel:n.randomVec(6*Math.random()+1),color:s.COLOR,radius:s.RADIUS})};s.COLOR="#666666",s.RADIUS=20,n.inherits(s,i),t.exports=s},function(t,o,e){const n=e(2),i=e(0),s=(e(1),e(3)),r=function({pos:t},o){i.call(this,{pos:t,radius:r.RADIUS,color:r.COLOR,vel:[0,0]}),this.game=o};r.RADIUS=15,r.COLOR="#31a5d9",n.inherits(r,i),r.prototype.reset=function(){this.vel=[0,0]},r.prototype.isCollidedWith=function(t){const[o,e]=this.pos,[n,i]=t.pos;return Math.sqrt((o-n)**2+(e-i)**2)<this.radius+t.radius},r.prototype.power=function(t){const[o,e]=this.vel,[n,i]=t;this.vel=[o+n,e+i]},r.prototype.fireBullet=function(){const t=this.pos,[o,e]=this.vel;if(0===o&&0===e)return;const n=new s({pos:t,vel:[5*o,5*e]});this.game.add(n)},t.exports=r},function(t,o,e){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,