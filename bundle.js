!function(t){var e={};function o(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=t,o.c=e,o.d=function(t,e,s){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(o.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)o.d(s,n,function(e){return t[e]}.bind(null,n));return s},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=5)}([function(t,e,o){o(1);function s({pos:t,vel:e,radius:o,color:s}){this.pos=t,this.vel=e,this.radius=o,this.color=s}s.prototype.draw=function(t){const[e,o]=this.pos;t.fillStyle=this.color,t.beginPath(),t.arc(e,o,this.radius,0,2*Math.PI),t.fill()},s.prototype.move=function(t){const[e,o]=this.pos,[s,n]=this.vel;this.pos=t([e+s,o+n])},s.prototype.isWrappable=!0,s.prototype.isCollidedWith=function(t){const[e,o]=this.pos,[s,n]=t.pos;return Math.sqrt((e-s)**2+(o-n)**2)<this.radius+t.radius},t.exports=s},function(t,e,o){const s=o(7),n=o(8),i=(o(0),o(4)),r=o(3),a=function(){this.controlMode="polar",this.movingObjects=new Set;for(let t=0;t<a.NUM_ASTEROIDS;t++){const t=this.randomPosition(),e=new s({pos:t});this.add(e)}const t=this.randomPosition();this.ship=new n({pos:t},this),this.bullets=new Set,this.keyStatus=0};a.prototype.add=function(t){t instanceof s?this.movingObjects.add(t):t instanceof i&&this.bullets.add(t)},a.prototype.remove=function(t){t instanceof s?this.movingObjects.delete(t):t instanceof i&&this.bullets.delete(t)},a.prototype.getControlMode=function(){return this.controlMode},a.prototype.setControlMode=function(t){this.controlMode=t,this.ship.updateControl()},a.prototype.randomPosition=function(){return[Math.random()*r.DIM_X,Math.random()*r.DIM_Y]},a.prototype.draw=function(t){t.clearRect(0,0,r.DIM_X,r.DIM_Y),this.allObjects().forEach(e=>e.draw(t))},a.prototype.moveObjects=function(){this.ship.control(this.keyStatus),this.keyStatus&r.spaceMask&&this.ship.fireBullet(),this.allObjects().forEach(t=>{t.isWrappable?t.move(this.wrap):t.move(e=>(this.isOutOfBounds(e)&&this.remove(t),e))})},a.prototype.wrap=function([t,e]){return[(t+r.DIM_X)%r.DIM_X,(e+r.DIM_Y)%r.DIM_Y]},a.prototype.checkCollisions=function(){this.movingObjects.forEach(t=>{this.ship.isCollidedWith(t)&&(this.relocate(this.ship),this.ship.reset())}),this.bullets.forEach(t=>{this.movingObjects.forEach(e=>{t.isCollidedWith(e)&&(this.remove(e),this.remove(t))})})},a.prototype.step=function(){this.moveObjects(),this.checkCollisions()},a.prototype.relocate=function(t){t.pos=this.randomPosition()},a.prototype.allObjects=function(){return[...this.movingObjects,this.ship,...this.bullets]},a.prototype.isOutOfBounds=function(t){const[e,o]=t;return e>a.DIM_X||e<0||o>a.DIM_Y||o<0},a.NUM_ASTEROIDS=20,t.exports=a},function(t,e){const o={inherits(t,e){const o=function(){};o.prototype=e.prototype,t.prototype=new o,t.prototype.constructor=t},randomVec(t){const e=2*Math.PI*Math.random();return o.scale([Math.sin(e),Math.cos(e)],t)},scale:(t,e)=>[t[0]*e,t[1]*e],magnitudeSqOf(t){const[e,o]=t;return e**2+o**2},magnitudeOf(t){return Math.sqrt(this.magnitudeSqOf(t))},unitVectorOf(t){const e=this.magnitudeOf(t);return e?this.scale(t,1/e):t},extendVector(t,e){const o=this.magnitudeOf(t);if(o){const s=o+e;return this.scale(this.scale(t,1/o),s)}return null},rotate(t,e){const[o,s]=t;return[o*Math.cos(e)-s*Math.sin(e),o*Math.sin(e)+s*Math.cos(e)]}};t.exports=o},function(t,e){t.exports={DIM_X:768,DIM_Y:512,wMask:1,aMask:2,sMask:4,dMask:8,spaceMask:16,SPEED_INTERVAL:.25}},function(t,e,o){const s=o(0),n=o(2),i=function({pos:t,vel:e}){s.call(this,{pos:t,vel:e,radius:i.RADIUS,color:i.COLOR}),this.isWrappable=!1};i.RADIUS=2,i.COLOR="white",n.inherits(i,s),t.exports=i},function(t,e,o){"use strict";o.r(e);o(9);const s=o(6);document.addEventListener("DOMContentLoaded",(function(){(new s).start()}))},function(t,e,o){const s=o(1),n=o(3),i=function(){const t=document.getElementById("app-container");this.game=new s;const e=document.createElement("canvas"),o=e.getContext("2d"),i=window.devicePixelRatio;e.width=n.DIM_X*i,e.height=n.DIM_Y*i,e.id="main-canvas",o.scale(i,i),e.tabIndex=1,e.autofocus=!0,t.appendChild(e);const r=function(){a.innerText=`Switch to ${this.getControlMode()} mode`,this.setControlMode("polar"===this.getControlMode()?"cartesian":"polar")}.bind(this.game),a=document.createElement("button");a.onclick=r,a.innerText=`Switch to ${"polar"===this.game.getControlMode()?"cartesian":"polar"} mode`,t.appendChild(a),this.context=o,this.canvas=e;(function(){e.addEventListener("keydown",t=>{switch(t.key){case"w":this.keyStatus|=n.wMask;break;case"a":this.keyStatus|=n.aMask;break;case"s":this.keyStatus|=n.sMask;break;case"d":this.keyStatus|=n.dMask;break;case" ":this.keyStatus|=n.spaceMask}}),e.addEventListener("keyup",t=>{switch(t.key){case"w":this.keyStatus&=~n.wMask;break;case"a":this.keyStatus&=~n.aMask;break;case"s":this.keyStatus&=~n.sMask;break;case"d":this.keyStatus&=~n.dMask;break;case" ":this.keyStatus&=~n.spaceMask;break;case"Escape":r()}})}).bind(this.game)()};i.prototype.start=function(){const t=()=>{this.game.step(),this.game.draw(this.context),requestAnimationFrame(t)};t()},i.prototype.bindKeyHandlers=function(){key("W",()=>{this.game.ship.power([0,-1])}),key("S",()=>{this.game.ship.power([0,1])}),key("A",()=>{this.game.ship.power([-1,0])}),key("D",()=>{this.game.ship.power([1,0])}),key("space",()=>{this.game.ship.fireBullet()})},t.exports=i},function(t,e,o){const s=o(2),n=o(0),i=function({pos:t}){n.call(this,{pos:t,vel:s.randomVec(6*Math.random()+1),color:i.COLOR,radius:i.RADIUS})};i.COLOR="#666666",i.RADIUS=20,s.inherits(i,n),t.exports=i},function(t,e,o){const s=o(2),n=o(0),i=(o(1),o(4)),r=o(3),a=function({pos:t},e){n.call(this,{pos:t,radius:a.RADIUS,color:a.COLOR,vel:[0,0]}),this.game=e,this.updateControl()};a.RADIUS=15,a.COLOR="#31a5d9",s.inherits(a,n),a.prototype.reset=function(){this.vel=[0,0]},a.prototype.updateControl=function(){this.controller=function(t){if("polar"===t){let t=0,e=0;return o=>(o&r.wMask&&(e+=r.SPEED_INTERVAL),o&r.aMask&&(t-=r.SPEED_INTERVAL/2),o&r.sMask&&(e-=r.SPEED_INTERVAL),o&r.dMask&&(t+=r.SPEED_INTERVAL/2),s.rotate(s.extendVector([1,0],e),t))}{let t=0,e=0;return o=>(o&r.wMask&&(e-=r.SPEED_INTERVAL),o&r.aMask&&(t-=r.SPEED_INTERVAL),o&r.sMask&&(e+=r.SPEED_INTERVAL),o&r.dMask&&(t+=r.SPEED_INTERVAL),[t,e])}}(this.game.getControlMode())},a.prototype.control=function(t){this.vel=this.controller(t)},a.prototype.fireBullet=function(){const t=this.pos,e=s.extendVector(this.vel,10)||[0,10],o=new i({pos:t,vel:e});this.game.add(o)},t.exports=a},function(t,e,o){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,