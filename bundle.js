!function(t){var e={};function s(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,o){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(s.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(o,i,function(e){return t[e]}.bind(null,i));return o},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=4)}([function(t,e,s){s(1);function o({pos:t,vel:e,radius:s,color:o}){this.pos=t,this.vel=e,this.radius=s,this.color=o}o.prototype.draw=function(t){const[e,s]=this.pos;t.fillStyle=this.color,t.beginPath(),t.arc(e,s,this.radius,0,2*Math.PI),t.fill()},o.prototype.move=function(t){const[e,s]=this.pos,[o,i]=this.vel;this.pos=t([e+o,s+i])},o.prototype.isWrappable=!0,t.exports=o},function(t,e,s){const o=s(6),i=s(7),n=(s(0),s(3)),a=function(){this.movingObjects=new Set;for(let t=0;t<a.NUM_ASTEROIDS;t++){const t=this.randomPostion(),e=new o({pos:t});this.add(e)}const t=this.randomPostion();this.ship=new i({pos:t},this),this.bullets=new Set,this.keyStatus=0};a.prototype.add=function(t){t instanceof o?this.movingObjects.add(t):t instanceof n&&this.bullets.add(t)},a.prototype.remove=function(t){t instanceof o?this.movingObjects.delete(t):t instanceof n&&this.bullets.delete(t)},a.prototype.randomPostion=function(){return[Math.random()*a.DIM_X,Math.random()*a.DIM_Y]},a.prototype.draw=function(t){t.clearRect(0,0,a.DIM_X,a.DIM_Y),this.allObjects().forEach(e=>e.draw(t))},a.prototype.moveObjects=function(){this.keyStatus&a.wMask&&this.ship.power([0,-.25]),this.keyStatus&a.aMask&&this.ship.power([-.25,0]),this.keyStatus&a.sMask&&this.ship.power([0,.25]),this.keyStatus&a.dMask&&this.ship.power([.25,0]),this.keyStatus&a.spaceMask&&this.ship.fireBullet(),this.allObjects().forEach(t=>{t.isWrappable?t.move(this.wrap):t.move(e=>(this.isOutOfBounds(e)&&this.remove(t),e))})},a.prototype.wrap=function([t,e]){return[(t+a.DIM_X)%a.DIM_X,(e+a.DIM_Y)%a.DIM_Y]},a.prototype.checkCollisions=function(){this.movingObjects.forEach(t=>{this.ship.isCollidedWith(t)&&(this.relocate(this.ship),this.ship.reset())}),this.bullets.forEach(t=>{this.movingObjects.forEach(e=>{t.isCollidedWith(e)&&(this.remove(e),this.remove(t))})})},a.prototype.step=function(){this.moveObjects(),this.checkCollisions()},a.prototype.relocate=function(t){t.pos=this.randomPostion()},a.prototype.allObjects=function(){return[...this.movingObjects,this.ship,...this.bullets]},a.prototype.isOutOfBounds=function(t){const[e,s]=t;return e>a.DIM_X||e<0||s>a.DIM_Y||s<0},a.DIM_X=768,a.DIM_Y=512,a.NUM_ASTEROIDS=10,a.wMask=1,a.aMask=16,a.sMask=256,a.dMask=4096,a.spaceMask=65536,t.exports=a},function(t,e){const s={inherits(t,e){const s=function(){};s.prototype=e.prototype,t.prototype=new s,t.prototype.constructor=t},randomVec(t){const e=2*Math.PI*Math.random();return s.scale([Math.sin(e),Math.cos(e)],t)},scale:(t,e)=>[t[0]*e,t[1]*e]};t.exports=s},function(t,e,s){const o=s(0),i=s(2),n=function({pos:t,vel:e}){o.call(this,{pos:t,vel:e,radius:n.RADIUS,color:n.COLOR}),this.isWrappable=!1};n.RADIUS=2,n.COLOR="white",i.inherits(n,o),n.prototype.isCollidedWith=function(t){const[e,s]=this.pos,[o,i]=t.pos;return Math.sqrt((e-o)**2+(s-i)**2)<this.radius+t.radius},t.exports=n},function(t,e,s){"use strict";s.r(e);s(8);const o=s(5);document.addEventListener("DOMContentLoaded",(function(){(new o).start()}))},function(t,e,s){const o=s(1),i=function(){const t=document.getElementById("app-container");this.game=new o;const e=document.createElement("canvas"),s=e.getContext("2d"),i=window.devicePixelRatio;e.width=o.DIM_X*i,e.height=o.DIM_Y*i,e.id="main-canvas",s.scale(i,i),e.tabIndex=1,e.autofocus=!0,t.appendChild(e),this.context=s,this.canvas=e;(function(){e.addEventListener("keydown",t=>{switch(t.key){case"w":this.keyStatus|=o.wMask;break;case"a":this.keyStatus|=o.aMask;break;case"s":this.keyStatus|=o.sMask;break;case"d":this.keyStatus|=o.dMask;break;case" ":this.keyStatus|=o.spaceMask}}),e.addEventListener("keyup",t=>{switch(t.key){case"w":this.keyStatus&=~o.wMask;break;case"a":this.keyStatus&=~o.aMask;break;case"s":this.keyStatus&=~o.sMask;break;case"d":this.keyStatus&=~o.dMask;break;case" ":this.keyStatus&=~o.spaceMask}})}).bind(this.game)()};i.prototype.start=function(){const t=()=>{this.game.step(),this.game.draw(this.context),requestAnimationFrame(t)};t()},i.prototype.bindKeyHandlers=function(){key("W",()=>{this.game.ship.power([0,-1])}),key("S",()=>{this.game.ship.power([0,1])}),key("A",()=>{this.game.ship.power([-1,0])}),key("D",()=>{this.game.ship.power([1,0])}),key("space",()=>{this.game.ship.fireBullet()})},t.exports=i},function(t,e,s){const o=s(2),i=s(0),n=function({pos:t}){i.call(this,{pos:t,vel:o.randomVec(6*Math.random()+1),color:n.COLOR,radius:n.RADIUS})};n.COLOR="#666666",n.RADIUS=20,o.inherits(n,i),t.exports=n},function(t,e,s){const o=s(2),i=s(0),n=(s(1),s(3)),a=function({pos:t},e){i.call(this,{pos:t,radius:a.RADIUS,color:a.COLOR,vel:[0,0]}),this.game=e};a.RADIUS=15,a.COLOR="#31a5d9",o.inherits(a,i),a.prototype.reset=function(){this.vel=[0,0]},a.prototype.isCollidedWith=function(t){const[e,s]=this.pos,[o,i]=t.pos;return Math.sqrt((e-o)**2+(s-i)**2)<this.radius+t.radius},a.prototype.power=function(t){const[e,s]=this.vel,[o,i]=t;this.vel=[e+o,s+i]},a.prototype.fireBullet=function(){const t=this.pos,[e,s]=this.vel;if(0===e&&0===s)return;const o=new n({pos:t,vel:[5*e,5*s]});this.game.add(o)},t.exports=a},function(t,e,s){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,